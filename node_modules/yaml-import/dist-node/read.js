"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = read;

var _path = _interopRequireDefault(require("path"));

var _fs = _interopRequireDefault(require("fs"));

var _jsYaml = _interopRequireDefault(require("js-yaml"));

var _getSchema = _interopRequireDefault(require("./get-schema"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function read(input, options, schemas) {
  const cwd = _path.default.dirname(input);

  const src = _fs.default.readFileSync(input, 'utf8');

  const opts = Object.assign({
    safe: true
  }, options);
  return _jsYaml.default[opts.safe ? 'safeLoad' : 'load'](src, _objectSpread({}, opts, {
    filename: input,
    schema: (0, _getSchema.default)(cwd, opts, schemas)
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWFkLnRzIl0sIm5hbWVzIjpbInJlYWQiLCJpbnB1dCIsIm9wdGlvbnMiLCJzY2hlbWFzIiwiY3dkIiwicGF0aCIsImRpcm5hbWUiLCJzcmMiLCJmcyIsInJlYWRGaWxlU3luYyIsIm9wdHMiLCJPYmplY3QiLCJhc3NpZ24iLCJzYWZlIiwieWFtbCIsImZpbGVuYW1lIiwic2NoZW1hIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBR2UsU0FBU0EsSUFBVCxDQUNiQyxLQURhLEVBRWJDLE9BRmEsRUFHYkMsT0FIYSxFQUlSO0FBQ0wsUUFBTUMsR0FBRyxHQUFHQyxjQUFLQyxPQUFMLENBQWFMLEtBQWIsQ0FBWjs7QUFDQSxRQUFNTSxHQUFHLEdBQUdDLFlBQUdDLFlBQUgsQ0FBZ0JSLEtBQWhCLEVBQXVCLE1BQXZCLENBQVo7O0FBRUEsUUFBTVMsSUFBSSxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUFFQyxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUFkLEVBQThCWCxPQUE5QixDQUFiO0FBRUEsU0FBT1ksZ0JBQUtKLElBQUksQ0FBQ0csSUFBTCxHQUFZLFVBQVosR0FBeUIsTUFBOUIsRUFBc0NOLEdBQXRDLG9CQUNGRyxJQURFO0FBRUxLLElBQUFBLFFBQVEsRUFBRWQsS0FGTDtBQUdMZSxJQUFBQSxNQUFNLEVBQUUsd0JBQVVaLEdBQVYsRUFBZU0sSUFBZixFQUFxQlAsT0FBckI7QUFISCxLQUFQO0FBS0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgeWFtbCBmcm9tICdqcy15YW1sJztcbmltcG9ydCBnZXRTY2hlbWEgZnJvbSAnLi9nZXQtc2NoZW1hJztcbmltcG9ydCB7IElPcHRpb25zIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlYWQoXG4gIGlucHV0OiBzdHJpbmcsXG4gIG9wdGlvbnM/OiBJT3B0aW9ucyB8IG51bGwsXG4gIHNjaGVtYXM/OiB5YW1sLlNjaGVtYVtdXG4pOiBhbnkge1xuICBjb25zdCBjd2QgPSBwYXRoLmRpcm5hbWUoaW5wdXQpO1xuICBjb25zdCBzcmMgPSBmcy5yZWFkRmlsZVN5bmMoaW5wdXQsICd1dGY4Jyk7XG5cbiAgY29uc3Qgb3B0cyA9IE9iamVjdC5hc3NpZ24oeyBzYWZlOiB0cnVlIH0sIG9wdGlvbnMpO1xuXG4gIHJldHVybiB5YW1sW29wdHMuc2FmZSA/ICdzYWZlTG9hZCcgOiAnbG9hZCddKHNyYywge1xuICAgIC4uLm9wdHMsXG4gICAgZmlsZW5hbWU6IGlucHV0LFxuICAgIHNjaGVtYTogZ2V0U2NoZW1hKGN3ZCwgb3B0cywgc2NoZW1hcylcbiAgfSk7XG59XG4iXX0=