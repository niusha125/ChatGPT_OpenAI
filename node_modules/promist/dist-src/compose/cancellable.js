import { asNew, intercept, mark } from "../helpers/index.js";
export default cancellable;

function cancellable(promise, create) {
  const p = asNew(promise, create);
  if (mark.get(p, 'cancellable')) return p;
  mark.set(p, 'cancellable');
  let cancellable = true;
  p.cancelled = false;

  p.cancel = function cancel() {
    if (!cancellable) return;
    this.cancelled = true;
  };

  const unfulfilled = new Promise(() => {});
  p.then(() => cancellable = false).catch(() => cancellable = false);
  return intercept(p, px => {
    return px.then(val => p.cancelled ? unfulfilled : val).catch(err => p.cancelled ? unfulfilled : Promise.reject(err));
  });
}