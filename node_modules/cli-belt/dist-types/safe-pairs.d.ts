import { IOfType } from './types';
export interface ISafePairsOpts {
    /**
     * If `true`, `safePairs` will throw on fail. Default: `false`.
     */
    fail?: boolean;
    /**
     * If `true`, `safePairs` will also check all properties of `b` exist in `a`. Default: `false`.
     */
    bidirectional?: boolean;
}
/**
 * Ensures all properties of `a` exist in `b` -and optionally, also vice versa. Returns `true` if they do.
 */
export default function safePairs(a: IOfType<any>, b: IOfType<any>, options?: ISafePairsOpts): boolean;
