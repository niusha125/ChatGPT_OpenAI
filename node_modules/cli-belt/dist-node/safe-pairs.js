"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = safePairs;

/**
 * Ensures all properties of `a` exist in `b` -and optionally, also vice versa. Returns `true` if they do.
 */
function safePairs(a, b, options = {}) {
  const aKeys = Object.keys(a);

  for (let key of aKeys) {
    if (!b.hasOwnProperty(key)) {
      if (options.fail) {
        throw Error(`Second pair element doesn't reproduce keys`);
      } else {
        return false;
      }
    }
  }

  if (options.bidirectional) {
    const bKeys = Object.keys(b);

    if (aKeys.length !== bKeys.length) {
      if (options.fail) {
        throw Error(`Second pair element doesn't reproduce keys`);
      } else {
        return false;
      }
    }
  }

  return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zYWZlLXBhaXJzLnRzIl0sIm5hbWVzIjpbInNhZmVQYWlycyIsImEiLCJiIiwib3B0aW9ucyIsImFLZXlzIiwiT2JqZWN0Iiwia2V5cyIsImtleSIsImhhc093blByb3BlcnR5IiwiZmFpbCIsIkVycm9yIiwiYmlkaXJlY3Rpb25hbCIsImJLZXlzIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBYUE7OztBQUdlLFNBQVNBLFNBQVQsQ0FDYkMsQ0FEYSxFQUViQyxDQUZhLEVBR2JDLE9BQXVCLEdBQUcsRUFIYixFQUlKO0FBQ1QsUUFBTUMsS0FBSyxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWUwsQ0FBWixDQUFkOztBQUNBLE9BQUssSUFBSU0sR0FBVCxJQUFnQkgsS0FBaEIsRUFBdUI7QUFDckIsUUFBSSxDQUFDRixDQUFDLENBQUNNLGNBQUYsQ0FBaUJELEdBQWpCLENBQUwsRUFBNEI7QUFDMUIsVUFBSUosT0FBTyxDQUFDTSxJQUFaLEVBQWtCO0FBQ2hCLGNBQU1DLEtBQUssQ0FBRSw0Q0FBRixDQUFYO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsZUFBTyxLQUFQO0FBQ0Q7QUFDRjtBQUNGOztBQUVELE1BQUlQLE9BQU8sQ0FBQ1EsYUFBWixFQUEyQjtBQUN6QixVQUFNQyxLQUFLLEdBQUdQLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixDQUFaLENBQWQ7O0FBQ0EsUUFBSUUsS0FBSyxDQUFDUyxNQUFOLEtBQWlCRCxLQUFLLENBQUNDLE1BQTNCLEVBQW1DO0FBQ2pDLFVBQUlWLE9BQU8sQ0FBQ00sSUFBWixFQUFrQjtBQUNoQixjQUFNQyxLQUFLLENBQUUsNENBQUYsQ0FBWDtBQUNELE9BRkQsTUFFTztBQUNMLGVBQU8sS0FBUDtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxTQUFPLElBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElPZlR5cGUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGludGVyZmFjZSBJU2FmZVBhaXJzT3B0cyB7XG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIGBzYWZlUGFpcnNgIHdpbGwgdGhyb3cgb24gZmFpbC4gRGVmYXVsdDogYGZhbHNlYC5cbiAgICovXG4gIGZhaWw/OiBib29sZWFuO1xuICAvKipcbiAgICogSWYgYHRydWVgLCBgc2FmZVBhaXJzYCB3aWxsIGFsc28gY2hlY2sgYWxsIHByb3BlcnRpZXMgb2YgYGJgIGV4aXN0IGluIGBhYC4gRGVmYXVsdDogYGZhbHNlYC5cbiAgICovXG4gIGJpZGlyZWN0aW9uYWw/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIEVuc3VyZXMgYWxsIHByb3BlcnRpZXMgb2YgYGFgIGV4aXN0IGluIGBiYCAtYW5kIG9wdGlvbmFsbHksIGFsc28gdmljZSB2ZXJzYS4gUmV0dXJucyBgdHJ1ZWAgaWYgdGhleSBkby5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2FmZVBhaXJzKFxuICBhOiBJT2ZUeXBlPGFueT4sXG4gIGI6IElPZlR5cGU8YW55PixcbiAgb3B0aW9uczogSVNhZmVQYWlyc09wdHMgPSB7fVxuKTogYm9vbGVhbiB7XG4gIGNvbnN0IGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gIGZvciAobGV0IGtleSBvZiBhS2V5cykge1xuICAgIGlmICghYi5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBpZiAob3B0aW9ucy5mYWlsKSB7XG4gICAgICAgIHRocm93IEVycm9yKGBTZWNvbmQgcGFpciBlbGVtZW50IGRvZXNuJ3QgcmVwcm9kdWNlIGtleXNgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAob3B0aW9ucy5iaWRpcmVjdGlvbmFsKSB7XG4gICAgY29uc3QgYktleXMgPSBPYmplY3Qua2V5cyhiKTtcbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHtcbiAgICAgIGlmIChvcHRpb25zLmZhaWwpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoYFNlY29uZCBwYWlyIGVsZW1lbnQgZG9lc24ndCByZXByb2R1Y2Uga2V5c2ApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuIl19