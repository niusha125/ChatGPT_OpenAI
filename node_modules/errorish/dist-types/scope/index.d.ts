import { IScope, ICoreOptions } from "../types";
/**
 * Allows the creation of specific scopes with different sets of default options. If a particular option is nor defined for a scope, it will fall back to the root scope value for that option -the root scope is the one the `ensure`, `throws`, `rejects`, and `normalize` functions as exported from `errorish` entry point belong to by default.
 */
declare const scope: {
    /**
     * Gets a scope by name -it is created if it doesn't exist. If no name is passed, the root scope will be returned.
     */
    get(name?: string | undefined): IScope;
    /**
     * Sets default options for a scope, taking the name of the scope as the first argument, and the `ICoreOptions` options as the second. If no name is passed and a single `ICoreOptions` argument is in its place, it will set the defaults for the root scope. It will also return the scope.
     */
    set(...args: [string, ICoreOptions] | [ICoreOptions]): IScope;
};
export { scope as default };
